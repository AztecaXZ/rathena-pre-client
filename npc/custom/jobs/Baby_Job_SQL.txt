prontera,143,179,5	script	Baby Job	975,{
    mes "^ff0000[Baby Job]^000000";
    mes "Hola, ^0000CD"+strcharinfo(0)+"^000000.";
    mes "yo puedo hacerte clase baby si hasi lo deceas. Quieres ser clase baby?";
    next;
    menu "Baby Job",Baby;
    job:

    if(Upper == 1 && Class >= Job_Lord_Knight) goto L_noReq;
    if(SkillPoint != 0){
    mes "Lo siento, utilizo por favor encima de todos sus puntos de la skill antes de cambiar de job";
    mes "Por favor, vuelve pronto!";
    close;
    }
    if(JobLevel < 10) goto L_LvError;
    switch(Class){
    case Job_Novice_High:
    case Job_Baby:
    case Job_Novice:
    skill 142,1,0;
    skill 143,1,0;
    mes "Bienvenido., elije el job de tu agrado";
    if(lastJob != 0 && Class == Job_Novice_High){
    switch(lastJob){
    case Job_Knight:
    case Job_Crusader:
    set @target_job, Job_Swordman_High;
    break;
    case Job_Monk:
    case Job_Priest:
    set @target_job, Job_Acolyte_High;
    break;
    case Job_Alchemist:
    case Job_Blacksmith:
    set @target_job, Job_Merchant_High;
    break;
    case Job_Rogue:
    case Job_Assassin:
    set @target_job, Job_Thief_High;
    break;
    case Job_Wizard:
    case Job_Sage:
    set @target_job, Job_Mage_High;
    break;
    case Job_Hunter:
    case Job_Bard:
    case Job_Dancer:
    set @target_job, Job_Archer_High;
    break;
    }
    } else {
    switch(select("Swordsman","Mage","Archer","Acolyte","Merchant","Thief",
    "Super Novice","Taekwon","Gunslinger","Ninja")){
    case 7:
    if(Class == Job_Novice_High) goto L_noReq;
    if($@JC_SupNovM > BaseLevel) goto L_BvError;
    if(Upper == 2)
    set @target_job, Job_Super_Baby;
    else
    set @target_job, Job_SuperNovice;
    break;
    case 8:
    if(Class == Job_Novice_High) goto L_noReq;
    if(Upper == 2) goto L_noReq;
    set @target_job, Job_Taekwon;
    break;
    case 9:
    case 10:
    if(Class == Job_Novice_High || Upper == 2) goto L_noReq;
    set @target_job, @menu + 15;
    break;
    default:
    set @target_job, @menu;
    if(Class == Job_Novice_High) set @target_job, @target_job + 4001;
    break;
    }
    }
    mes "Estas seguro que queires cambiar a este job " + JobName(@target_job) + "?";
    if(select("No","Yes") == 2){
    callfunc "Job_Change", @target_job;
    if(@target_job == Job_Gunslinger || @target_job == Job_Ninja || @target_job == Job_Taekwon) {
    callfunc "F_ClearJobVar";
    } else {
    if($@JC_Plat) goto L_GivePlat;
    }
    }
    close;
    break;
    default:
    if(JobLevel < $@JC_MinimumJB) goto L_LvError;
    deletearray @job_opt, getarraysize(@job_opt);
    if(Class < Job_Knight || Class == Job_Taekwon || (Class > Job_Baby && Class < Job_Baby_Knight) || (Class > Job_Novice_High && Class < Job_Lord_Knight)){
    if(lastJob != 0){
    set @target_job, lastJob + 4001;
    } else {
    switch(Class){
    case Job_Swordman_High:
    case Job_Baby_Swordman:
    case Job_Swordman:
    set @job_opt[0], Job_Knight;
    set @job_opt[1], Job_Crusader;
    break;
    case Job_Mage_High:
    case Job_Baby_Mage:
    case Job_Mage:
    set @job_opt[0], Job_Wizard;
    set @job_opt[1], Job_Sage;
    break;
    case Job_Archer_High:
    case Job_Baby_Archer:
    case Job_Archer:
    set @job_opt[0], Job_Hunter;
    if(Sex == 0)
    set @job_opt[1], Job_Dancer;
    else
    set @job_opt[1], Job_Bard;
    break;
    case Job_Acolyte_High:
    case Job_Baby_Acolyte:
    case Job_Acolyte:
    set @job_opt[0], Job_Priest;
    set @job_opt[1], Job_Monk;
    break;
    case Job_Merchant_High:
    case Job_Baby_Merchant:
    case Job_Merchant:
    set @job_opt[0], Job_Blacksmith;
    set @job_opt[1], Job_Alchemist;
    break;
    case Job_Thief_High:
    case Job_Baby_Thief:
    case Job_Thief:
    set @job_opt[0], Job_Assassin;
    set @job_opt[1], Job_Rogue;
    break;
    default:
    set @job_opt[0], Job_Star_Gladiator;
    set @job_opt[1], Job_Soul_Linker;
    break;
    }
    mes "Bienvenido, pro favor selecciona que job queires cambiar";
    set @target_job, @job_opt[select(JobName(@job_opt[0]), JobName(@job_opt[1]))-1];
    if(Class > Job_Novice_High && Class < Job_Lord_Knight) set @target_job, @target_job + 4001;
    }
    mes "Are you sure you want to change to " + JobName(@target_job) + "?";
    if(select("No","Yes")==2){
    callfunc "Job_Change", @target_job;
    if(@target_job == Job_Star_Gladiator || @target_job == Job_Soul_Linker) {
    callfunc "F_ClearJobVar";
    } else {
    if($@JC_Plat) goto L_GivePlat;
    }
    }
    close;
    }
    if(checkfalcon() || checkcart() || checkriding()) goto L_remove;
    if((Class >=Job_Knight) && (Class <=Job_Crusader2)){
    mes "Do you want to reborn?";
    if(select("Yes","No")==1){
    if(BaseLevel < 99 || JobLevel < 50) goto L_cantCh;
    set lastJob, Class;
    if(Class == Job_Knight2){
    set lastJob, Job_Knight;
    } else {
    if(Class == Job_Crusader2){
    if(Class == Job_Crusader2){
    set lastJob, Job_Crusader;
    }
    }
    jobchange Job_Novice_High;
    resetlvl(1);
    skill 142,1,0;
    skill 143,1,0;
    }
    close;
    }
    }
    mes "Hmm lo siento mucho, no hay mas clases para su job.tal vez quieras ser 3er Job abajo en el centro de prontera esta un amigo que seguro te podrá ayudar";
    close;

    L_GivePlat:
    if (BaseClass==Job_SuperNovice) goto L_sSuperN;
    if (BaseClass==Job_Swordman) goto L_sSword;
    if (BaseClass==Job_Mage) goto L_sMage;
    if (BaseClass==Job_Archer) goto L_sArcher;
    if (BaseClass==Job_Acolyte) goto L_sAcolyte;
    if (BaseClass==Job_Merchant) goto L_sMerchant;
    if (BaseClass==Job_Thief) goto L_sThief;
    close;
    L_sSuperN:
    skill 142,1,0;
    close;
    L_sSword:
    skill 142,1,0;
    skill 144,1,0;
    skill 145,1,0;
    skill 146,1,0;
    close;
    L_sMage:
    skill 142,1,0;
    skill 157,1,0;
    close;
    L_sArcher:
    skill 142,1,0;
    skill 147,1,0;
    skill 148,1,0;
    close;
    L_sAcolyte:
    skill 142,1,0;
    skill 156,1,0;
    close;
    L_sMerchant:
    skill 142,1,0;
    skill 153,1,0;
    skill 154,1,0;
    skill 155,1,0;
    close;
    L_sThief:
    skill 142,1,0;
    skill 149,1,0;
    skill 150,1,0;
    skill 151,1,0;
    skill 152,1,0;
    close;

    L_cantCh:
    mes "Lo siento, usted no cumplo los requisitos de cambiar para ser 3er job tienes q ser nivel minimo de 450";
    mes "Please come again soon!";
    close;

    L_LvError:
    mes "Lo siento, usted no parezco tener bastantes niveles de job";
    mes "Please come again soon!";
    close;

    L_BvError:
    mes "Lo siento, usted no parezco tener bastantes niveles base";
    mes "Please come again soon!";
    close;

    L_noReq:
    mes "Lo siento, usted no cumplo los requisitos de cambiar";
    mes "Please come again soon!";
    close;

    L_remove:
    mes "Quite por favor su carro, halcón o PECO";
    mes "Please come again soon!";
    close;

    OnInit:
    // Variable Setup
    set $@JC_MinimumJB, 40; //Minimum job level for changing between 2nd and advance Class (Default : 40)
    set $@JC_Plat, 1; //Give Platinum skills on Jobchange (Default : 1-yes)
    set $@JC_SupNovM, 45; //Base Level to change into Super Novice (Default : 45)
    end;
    Baby:

    set nome$, "[Baby JobChanger]";
    if((Class == 0) && (JobLevel >9))
    {
    mes "JobLevel: "+ JobLevel;
    mes "Class: "+Class;
    switch(select("Baby Novice","Nada"))
    {
    case 1:
    jobchange 4023;
    break;
    case 2:
    mes "Mueva hacia atrás cuando puedo ayudarle!";
    break;
    }
    }
    else if((Class == 4023) && (JobLevel >9))
    {
    switch(select("Baby Swordsman","Baby Magician","Baby Archer","Baby Acolyte","Baby Merchant","Baby Thief","Baby Super ovice","Nothing"))
    {
    case 1:
    jobchange 4024;
    break;
    case 2:
    jobchange 4025;
    break;
    case 3:
    jobchange 4026;
    break;
    case 4:
    jobchange 4027;
    break;
    case 5:
    jobchange 4028;
    break;
    case 6:
    jobchange 4029;
    break;
    case 7:
    jobchange 4045;
    break;
    case 8:
    mes "Back when I can help you!";
    break;
    }
    }
    else if((Class == 4024) && (JobLevel >39))
    { switch(select("Baby Knight","Baby Crusader","Nothing"))
    {
    case 1:
    jobchange 4030;
    break;
    case 2:
    jobchange 4037;
    break;
    case 3:
    mes "Back when I can help you!";
    break;
    }
    }
    else if((Class == 4025) && (JobLevel >39))
    {
    switch(select("Baby Wizard","Baby Sage","Nothing"))
    {
    case 1:
    jobchange 4032;
    break;
    case 2:
    jobchange 4039;
    break;
    case 3:
    mes "Mueva hacia atrás cuando puedo ayudarle!";
    break;
    }
    }
    else if((Class == 4026) && (JobLevel >39))
    {
    switch(select("Baby Hunter","Baby Bard","Baby Dancer","Nothing"))
    {
    case 1:
    jobchange 4034;
    break;
    case 2:
    jobchange 4042;
    break;
    case 3:
    jobchange 4043;
    break;
    case 4:
    mes "Back when I can help you!";
    break;
    }
    }
    else if((Class == 4027) && (JobLevel >39))
    {
    switch(select("Baby Priest","Baby Monk","Nothing"))
    {
    case 1:
    jobchange 4031;
    break;
    case 2:
    jobchange 4038;
    break;
    case 3:
    mes "Back when I can help you!";
    break;
    }
    }
    else if((Class == 4028) & (JobLevel > 39))
    { switch(select("Baby Blacksmith","Baby Alchemist","Nothing"))
    {
    case 1:
    jobchange 4033;
    break;
    case 2:
    jobchange 4041;
    break;
    case 3:
    mes "Mueva hacia atrás cuando puedo ayudarle!";
    break;
    }
    }
    else if((Class == 4029) && (JobLevel > 39))
    {
    switch(select("Baby Assassin","Baby Rogue","Nothing"))
    {
    case 1:
    jobchange 4035;
    break;
    case 2:
    jobchange 4040;
    break;
    case 3:
    mes "Mueva hacia atrás cuando puedo ayudarle!";
    break;
    }
    }
    else
    mes "Lo siento no puedo ayduarte!";
    close;
    }
}